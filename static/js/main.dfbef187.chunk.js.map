{"version":3,"sources":["components/Queue/index.tsx","components/Layout/style.ts","components/QueueInput/style.ts","components/Queue/style.ts","components/QueueInput/index.tsx","components/Layout/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["curQueue","setCurQueue","Container","styled","div","Input","input","Submit","button","QueueDiv","QueueButtonsDiv","ItemContainer","Item","props","src","Thumbnail","alt","Title","Queue","useState","items","setItems","useEffect","download","a","curItems","curItem","Promise","res","rej","fetch","method","mode","cache","headers","body","JSON","stringify","format","Formats","url","Info","videoDetails","video_url","info","then","fileStream","streamSaver","createWriteStream","size","parseInt","formats","contentLength","writableStrategy","undefined","readableStrategy","pipeTo","console","log","error","catch","finally","filter","val","i","map","onClick","QueueInput","inputRef","type","ref","value","json","newQueue","item","newItem","thumbnails","title","push","Layout","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIAIWA,EACAC,E,iDCHEC,EAAYC,IAAOC,IAAV,oK,cCATF,EAAYC,IAAOC,IAAV,sIAQTC,EAAQF,IAAOG,MAAV,6CAILC,EAASJ,IAAOK,OAAV,mD,gCCZNN,EAAYC,IAAOC,IAAV,uJASTK,EAAWN,IAAOC,IAAV,gPAaRM,EAAkBP,IAAOC,IAAV,6FAOfO,EAAgBR,IAAOC,IAAV,0H,wBHjBpBQ,EAAO,SAACC,GACZ,OACE,eAACF,EAAD,WACE,qBAAKG,IAAKD,EAAME,UAAWC,IAAI,QAC/B,gCAAQH,EAAMI,YAsELC,EAjED,WACZ,IADkB,EAEQC,mBADM,IADd,mBAEXC,EAFW,KAEJC,EAFI,KAIlBC,qBAAU,WACRtB,EAAWoB,IACV,CAACA,IAEJE,qBAAU,WACRrB,EAAcoB,IACb,IAEH,IAAME,EAAQ,uCAAG,kCAAAC,EAAA,sDACXC,EADW,YACIL,GADJ,cAEMA,GAFN,aAAAI,EAAA,kCAAAA,EAAA,6DAELE,EAFK,iBAIP,IAAIC,SAAQ,SAACC,EAAKC,GACtBC,MAAM,sEAAuE,CAC3EC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACC,OAAQZ,EAAQa,QAASC,IAAKd,EAAQe,KAAKC,aAAaC,UAAWC,KAAMlB,EAAQe,SAExGI,MAAK,SAAAjB,GACJ,GAAGA,EAAIO,KAAK,CACV,IAAMW,EAAaC,IAAYC,kBAAZ,UAAiCtB,EAAQT,MAAzC,QAAsD,CACvEgC,KAAMC,SAASxB,EAAQe,KAAKU,QAAQ,GAAGC,eACvCC,sBAAkBC,EAClBC,sBAAkBD,IAEpB1B,EAAIO,KAAKqB,OAAOV,GACfD,KAAKY,QAAQC,IAAKD,QAAQE,WAG9BC,MAAM/B,GACNgC,SAAQ,WACPpC,EAAWA,EAASqC,QAAO,SAACC,EAAKC,GAAN,OAAYD,IAAQrC,KAC/CL,EAASI,GACTG,EAAI,cAGPiB,KAAKY,QAAQC,KACbE,MAAMH,QAAQE,OAjCF,iUAAH,qDAqCd,OACA,eAAC,EAAD,WACE,cAAClD,EAAD,UACGW,EAAM6C,KAAI,SAACF,EAAKC,GACf,OAAO,cAAC,EAAD,CAAMjD,UAAWgD,EAAIhD,UAAWE,MAAO8C,EAAI9C,MAAOwB,KAAMsB,EAAItB,KAAMF,QAASwB,EAAIxB,SAAcyB,QAGxG,cAACtD,EAAD,UACE,wBAAQwD,QAAS3C,EAAjB,mCIrCS4C,EAxCI,WACjB,IAAIC,EA+BJ,OACA,eAAC,EAAD,WACE,cAAC/D,EAAD,CAAOgE,KAAK,OAAOC,IAAK,SAAAA,GAAWA,IAAKF,EAAWE,MACnD,cAAC/D,EAAD,CAAQ2D,QAhCM,WACdpC,MAAM,qEAAsE,CAC1EC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACG,IAAK4B,EAASG,UAErC1B,MAAK,SAAAjB,GAAG,OAAIA,EAAI4C,UAChB3B,MAAK,SAAAjB,GACJ,IADW,EACL6C,EAAQ,YAAOzE,GADV,cAGO4B,GAHP,IAGX,IAAI,EAAJ,qBAAsB,CAAC,IAAb8C,EAAY,QACd9B,EAAuB8B,EAAK9B,KAC5B+B,EAAgB,CACpBlC,KAAMG,EACN7B,UAAW6B,EAAKF,aAAakC,WAAW,GAAGpC,IAC3CvB,MAAO2B,EAAKF,aAAamC,MACzBtC,QAASmC,EAAKvB,SAEhBsB,EAASK,KAAKH,IAXL,8BAcX1E,EAAYwE,OAOd,8BCtBWM,EAVA,WAEb,OACE,eAAC7E,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCTS8E,cAAf,ijBCWeC,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dfbef187.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {Container, QueueDiv, QueueButtonsDiv,ItemContainer} from './style'\r\nimport streamSaver from 'streamsaver'\r\n\r\nexport let curQueue: Array<item>;\r\nexport let setCurQueue: React.Dispatch<React.SetStateAction<item[]>>;\r\n\r\nexport interface item {\r\n  Thumbnail: string,\r\n  Title: string,\r\n  Info: ytdl.videoInfo,\r\n  Formats: Array<ytdl.videoFormat>\r\n}\r\n\r\nconst Item = (props: item) => {\r\n  return(\r\n    <ItemContainer>\r\n      <img src={props.Thumbnail} alt='404'/>\r\n      <label>{props.Title}</label>\r\n    </ItemContainer>\r\n  )\r\n}\r\n\r\nconst Queue = () => {\r\n  const emptyQueue: Array<item> = [];\r\n  const [items, setItems] = useState(emptyQueue);\r\n\r\n  useEffect(() => {\r\n    curQueue = items;\r\n  }, [items])\r\n\r\n  useEffect(() => {\r\n    setCurQueue = setItems;\r\n  }, [])\r\n\r\n  const download = async () => {\r\n    let curItems = [...items];\r\n    for(const curItem of items){\r\n      // eslint-disable-next-line no-loop-func\r\n      await new Promise((res, rej) => {\r\n        fetch(`http://ec2-15-188-62-235.eu-west-3.compute.amazonaws.com:8080/video`, {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          cache: 'no-cache',\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({format: curItem.Formats, url: curItem.Info.videoDetails.video_url, info: curItem.Info})\r\n        })\r\n        .then(res => {\r\n          if(res.body){\r\n            const fileStream = streamSaver.createWriteStream(`${curItem.Title}.mkv`, {\r\n              size: parseInt(curItem.Info.formats[1].contentLength),\r\n              writableStrategy: undefined,\r\n              readableStrategy: undefined\r\n            })\r\n            res.body.pipeTo(fileStream)\r\n            .then(console.log, console.error)\r\n          }\r\n        })\r\n        .catch(rej)\r\n        .finally(() => {\r\n          curItems = curItems.filter((val, i) => val !== curItem)\r\n          setItems(curItems);\r\n          res(\"Done\")\r\n        });\r\n      })\r\n      .then(console.log)\r\n      .catch(console.error)\r\n    }\r\n  }\r\n\r\n  return(\r\n  <Container>\r\n    <QueueDiv>\r\n      {items.map((val, i) => {\r\n        return <Item Thumbnail={val.Thumbnail} Title={val.Title} Info={val.Info} Formats={val.Formats} key={i}/>\r\n      })}\r\n    </QueueDiv>\r\n    <QueueButtonsDiv>\r\n      <button onClick={download}>Download Videos</button>\r\n    </QueueButtonsDiv>\r\n  </Container>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Queue\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  margin: 1vh 1vw;\r\n  width: 98vw;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Submit = styled.button`\r\n  width: fit-content;\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  height: 90vh;\r\n  width: 98vw;\r\n  margin: 1vh 1vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const QueueDiv = styled.div`\r\n  flex: 2;\r\n  height: 100%;\r\n  width: auto;\r\n  margin: 1vh 1vw;\r\n  display: flex;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nexport const QueueButtonsDiv = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: auto;\r\n  margin: 1vh 1vw;\r\n`;\r\n\r\nexport const ItemContainer = styled.div`\r\n  height: 100px;\r\n  width: 100%;\r\n\r\n  img {\r\n    height: 100%;\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\n","import React from 'react'\r\nimport {Input, Submit, Container} from './style'\r\nimport {curQueue, setCurQueue, item} from '../Queue'\r\nconst QueueInput = (): JSX.Element => {\r\n  let inputRef: HTMLInputElement;\r\n\r\n  const getInfo = () => {\r\n    fetch(`http://ec2-15-188-62-235.eu-west-3.compute.amazonaws.com:8080/info`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({url: inputRef.value})\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      const newQueue = [...curQueue]\r\n\r\n      for(const item of res){\r\n        const info: ytdl.videoInfo = item.info;\r\n        const newItem: item = {\r\n          Info: info,\r\n          Thumbnail: info.videoDetails.thumbnails[0].url,\r\n          Title: info.videoDetails.title,\r\n          Formats: item.formats\r\n        };\r\n        newQueue.push(newItem)\r\n      }\r\n\r\n      setCurQueue(newQueue);\r\n    })\r\n  }\r\n\r\n  return(\r\n  <Container>\r\n    <Input type='text' ref={ref => {if(ref) inputRef = ref}}/>\r\n    <Submit onClick={getInfo}>Add to queue</Submit>\r\n  </Container>)\r\n}\r\n\r\n\r\nexport default QueueInput\r\n","import React from 'react'\r\nimport {Container} from './style'\r\nimport QueueInput from '../QueueInput'\r\nimport Queue from '../Queue'\r\n\r\n\r\nconst Layout = () => {\r\n\r\n  return(\r\n    <Container>\r\n      <QueueInput />\r\n      <Queue />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    color: var(--white);\r\n    font-family: Roboto;\r\n  }\r\n\r\n  html {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n\r\n  body {\r\n    background-color: var(--black);\r\n    overflow: hidden;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n\r\n  :root {\r\n    --white: #e8e6e3;\r\n    --almost-white: #CED4DA;\r\n    --light-grey: #ADB5BD;\r\n    --regular-grey: #6C757D;\r\n    --dark-grey: #495057;\r\n    --almost-black: #343A40;\r\n    --black: #212529;\r\n    --blue: #48cae4;\r\n  }\r\n`;\r\n","import React from 'react';\nimport Layout from './components/Layout'\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}