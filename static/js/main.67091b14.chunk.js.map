{"version":3,"sources":["components/Queue/Item/index.tsx","components/Queue/index.tsx","components/Input/style.ts","components/Queue/style.ts","components/Queue/Item/style.ts","components/Quality/style.ts","components/KebabMenu/index.tsx","components/Input/index.tsx","components/InfoLabel/style.ts","components/InfoLabel/index.tsx","components/Layout/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["changeTitle","curQueue","setCurQueue","Outer","styled","div","Input","input","Submit","button","QueueContainer","ButtonsContainer","NavDiv","NavLabel","label","NavSpan","span","DropdownContent","VideoOptions","Container","PlayItem","props","show","ImagePreview","Image","img","NameContainer","Separator","hr","KebabMenu","xmlns","height","viewBox","width","d","fill","Item","titleLabel","useRef","useState","Title","setTitle","ext","setExt","useEffect","src","Thumbnail","ref","onBlur","current","scrollLeft","onClick","e","setAttribute","focus","document","addEventListener","stopRenameEnter","event","target","key","innerHTML","replace","removeEventListener","stopRename","renameVideo","defaultValue","onChange","value","disabled","Queue","items","setItems","download","a","curItems","curItem","Promise","res","rej","fetch","method","mode","cache","headers","body","JSON","stringify","url","Info","webpage_url","info","then","console","log","fileStream","streamSaver","createWriteStream","size","parseInt","Format","filesize","writableStrategy","undefined","readableStrategy","pipeTo","error","catch","finally","filter","val","i","map","Progress","inputRef","type","json","newQueue","parsedData","bestFormat","quality","formats","format","newItem","thumbnail","title","push","ILabel","InfoLabel","setInfo","Layout","createGlobalStyle","App","URL","window","location","href","searchParams","get","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.67091b14.chunk.js","sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  PlayItem,\r\n  ImagePreview,\r\n  Image,\r\n  NameContainer,\r\n  VideoOptions,\r\n  Container,\r\n  DropdownContent,\r\n  Separator,\r\n} from './style';\r\nimport { Outer } from '../../Quality/style';\r\n// import Quality from '../../Quality';\r\nimport KebabMenu from '../../KebabMenu';\r\nimport { item } from '../index';\r\n\r\nlet changeTitle: React.Dispatch<React.SetStateAction<string>>;\r\n\r\nconst renameVideo = function (e: any) {\r\n  e.setAttribute('contenteditable', true);\r\n  e.focus();\r\n  const label = e;\r\n  function stopRenameEnter(event: any) {\r\n    if (event.target === label && event.key === 'Enter') {\r\n      label.innerHTML.replace(/\\n/g, '');\r\n      label.setAttribute('contenteditable', false);\r\n      document.removeEventListener('keydown', stopRenameEnter);\r\n      changeTitle(label.innerHTML);\r\n    }\r\n  }\r\n  function stopRename() {\r\n    label.setAttribute('contenteditable', false);\r\n    label.removeEventListener('focusout', stopRename);\r\n    changeTitle(label.innerHTML);\r\n  }\r\n  document.addEventListener('keydown', stopRenameEnter);\r\n  e.addEventListener('focusout', stopRename);\r\n};\r\n\r\nconst Item: FC<item> = (props: item) => {\r\n  // const { id, merge, /*clips,*/ i, duration } = props;\r\n  const titleLabel = useRef(null);\r\n  const [title, setTitle] = useState(props.Title);\r\n  // const [qual, setQual] = useState<string>(props.quality.entries().next().value[0]);\r\n  const [show, setShow] = useState(true);\r\n  const [ext, setExt] = useState('mkv');\r\n  // const refs: any = [titleLabel];\r\n\r\n  useEffect(() => {\r\n    changeTitle = setTitle;\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (outQueue && outQueue[props.i]) outQueue[props.i].curQual = qual;\r\n  // }, [qual, props]);\r\n\r\n  // useEffect(() => {\r\n  //   if (outQueue && outQueue[props.i]) outQueue[props.i].ext = ext;\r\n  // }, [ext, props]);\r\n\r\n  // const dv = () => {\r\n  //   // @ts-ignore: Object is possibly 'null'.\r\n  //   const format = props.quality.get(qual);\r\n  //   const callback = () => {\r\n  //     const removedQueue = outQueue.filter((e) => e.id !== props.id);\r\n  //     updateQueue(removedQueue);\r\n  //   };\r\n  //   if (Math.sign(parseInt(ext)) === -1) {\r\n  //     let container: string = ext === '-3' ? 'mkv' : ext === '-2' ? 'mp4' : 'webm';\r\n  //     downloadVideo(id, callback, title, merge, format, container, clips, duration);\r\n  //   } else {\r\n  //     let container: string = ext === '1' ? 'mp3' : 'm4a';\r\n  //     downloadAudio(id, callback, title, container, clips, duration);\r\n  //   }\r\n  // };\r\n\r\n  // const setActive = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n  //   const res = refs.filter((val: any) => val.current === e.target || val === e.target);\r\n  //   if (res.length) {\r\n  //     setShow(!show);\r\n  //     outQueue[props.i].download = !show;\r\n  //   }\r\n  // };\r\n\r\n  // const fullmin = props.duration / 60;\r\n  // const hours = Math.floor(fullmin / 60);\r\n  // const min = Math.floor(fullmin - hours * 60);\r\n  // const sec = Math.floor(props.duration - min * 60);\r\n\r\n  // const h =\r\n  //   hours.toString().length > 1 ? hours.toString() : hours.toString().length > 0 ? '0' + hours.toString() : '00';\r\n  // const m = min.toString().length > 1 ? min.toString() : min.toString().length > 0 ? '0' + min.toString() : '00';\r\n  // const s = sec.toString().length > 1 ? sec.toString() : sec.toString().length > 0 ? '0' + sec.toString() : '00';\r\n\r\n  return (\r\n    <Container /*onClick={setActive}*/>\r\n      <PlayItem\r\n        // @ts-ignore: Object is possibly 'null'.\r\n        show={show}\r\n      >\r\n        <ImagePreview>\r\n          <Image src={props.Thumbnail} />\r\n        </ImagePreview>\r\n        <NameContainer\r\n          ref={titleLabel}\r\n          onBlur={() => {\r\n            // @ts-ignore: Object is possibly 'null'.\r\n            titleLabel.current.scrollLeft = 0;\r\n          }}\r\n        >\r\n          {props.Title}\r\n        </NameContainer>\r\n        <VideoOptions>\r\n          <KebabMenu />\r\n          <DropdownContent>\r\n            <label onClick={() => renameVideo(titleLabel.current)}>Rename video</label>\r\n            {/* <Trim hh={h} mm={m} ss={s} clips={clips} i={i} key={ID()} /> */}\r\n            <label /*onClick={dv}*/>Download video</label>\r\n            <Separator />\r\n            {/* <Quality quality={props.quality} setQual={setQual} /> */}\r\n            <Outer>\r\n              <label>Filetype:</label>\r\n              <select defaultValue={ext} onChange={(e) => setExt(e.target.value)}>\r\n                <optgroup label=\"Video\">\r\n                  <option value={-3}>mkv</option>\r\n                  <option value={-2}>mp4</option>\r\n                  <option value={-1} disabled={true}>\r\n                    webm\r\n                  </option>\r\n                </optgroup>\r\n                <optgroup label=\"Audio\">\r\n                  <option value={1} disabled={true}>\r\n                    mp3\r\n                  </option>\r\n                  <option value={2}>m4a</option>\r\n                </optgroup>\r\n              </select>\r\n            </Outer>\r\n          </DropdownContent>\r\n        </VideoOptions>\r\n      </PlayItem>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { Outer, QueueContainer, ButtonsContainer, NavSpan, NavLabel, NavDiv } from './style';\r\nimport Item from './Item';\r\nimport streamSaver from 'streamsaver'\r\n// import { changeSearch, searchIsUp } from '../Search/index';\r\n\r\nexport let curQueue: Array<item>;\r\nexport let setCurQueue: React.Dispatch<React.SetStateAction<item[]>>;\r\n\r\nexport interface item {\r\n  Thumbnail: string,\r\n  Title: string,\r\n  Info: any,\r\n  Format: any\r\n}\r\n\r\nexport let outExt: string;\r\n\r\nconst Queue: FC = () => {\r\n  const emptyQueue: Array<item> = [];\r\n  const [items, setItems] = useState(emptyQueue);\r\n  const [ext, setExt] = useState('-3');\r\n\r\n  useEffect(() => {\r\n    outExt = ext;\r\n  }, [ext]);\r\n\r\n  useEffect(() => {\r\n    curQueue = items;\r\n  }, [items])\r\n\r\n  useEffect(() => {\r\n    setCurQueue = setItems;\r\n  }, [])\r\n\r\n  const download = async () => {\r\n    let curItems = [...items];\r\n    for(const curItem of items){\r\n      // eslint-disable-next-line no-loop-func\r\n      await new Promise((res, rej) => {\r\n        // fetch(`http://localhost:8080/video`, {\r\n        fetch(`https://api.web-dl.live/video`, {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          cache: 'no-cache',\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({ url: curItem.Info.webpage_url, info: curItem.Info })\r\n        })\r\n        .then(res => {\r\n          console.log(curItem)\r\n          if(res.body){\r\n            const fileStream = streamSaver.createWriteStream(`${curItem.Title}.mkv`, {\r\n              size: parseInt(curItem.Format.filesize),\r\n              writableStrategy: undefined,\r\n              readableStrategy: undefined\r\n            })\r\n            res.body.pipeTo(fileStream)\r\n            .then(console.log, console.error)\r\n          }\r\n        })\r\n        .catch(rej)\r\n        .finally(() => {\r\n          curItems = curItems.filter((val, i) => val !== curItem)\r\n          setItems(curItems);\r\n          res(\"Done\")\r\n        });\r\n      })\r\n      .then(console.log)\r\n      .catch(console.error)\r\n    }\r\n  }\r\n\r\n  // const downloadQueue = () => {\r\n  //   updateQueue(outQueue);\r\n\r\n  //   let skipped = 0;\r\n  //   const callback = () => {\r\n  //     const removedQueue = [...outQueue];\r\n  //     removedQueue.splice(skipped, 1);\r\n  //     setQueue(removedQueue);\r\n  //     let tryAgain = true;\r\n  //     while (tryAgain) {\r\n  //       if (removedQueue.length > skipped) {\r\n  //         const vid = removedQueue[skipped];\r\n  //         if (vid.download) tryAgain = false;\r\n  //         if (tryAgain) skipped++;\r\n  //       } else {\r\n  //         tryAgain = false;\r\n  //       }\r\n  //     }\r\n\r\n  //     if (removedQueue.length > skipped) {\r\n  //       const vid = removedQueue[skipped];\r\n  //       const format = vid.quality.get(vid.curQual);\r\n  //       if (Math.sign(parseInt(vid.ext)) === -1) {\r\n  //         let ext: string = vid.ext === '-3' ? 'mkv' : vid.ext === '-2' ? 'mp4' : 'webm';\r\n  //         downloadVideo(vid.id, callback, vid.title, vid.merge, format, ext, vid.clips, vid.duration);\r\n  //       } else {\r\n  //         let ext: string = vid.ext === '1' ? 'mp3' : 'm4a';\r\n  //         downloadAudio(vid.id, callback, vid.title, ext, vid.clips, vid.duration);\r\n  //       }\r\n  //     } else {\r\n  //       setDisable(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   let tryAgain = true;\r\n  //   while (tryAgain) {\r\n  //     if (outQueue.length > skipped) {\r\n  //       const vid = outQueue[skipped];\r\n  //       if (vid.download) tryAgain = false;\r\n  //       if (tryAgain) skipped++;\r\n  //     } else {\r\n  //       tryAgain = false;\r\n  //     }\r\n  //   }\r\n  //   if (outQueue.length > skipped) {\r\n  //     const vid = outQueue[skipped];\r\n  //     const format = vid.quality.get(vid.curQual);\r\n  //     setDisable(true);\r\n  //     if (Math.sign(parseInt(vid.ext)) === -1) {\r\n  //       let ext: string = vid.ext === '-3' ? 'mkv' : vid.ext === '-2' ? 'mp4' : 'webm';\r\n  //       downloadVideo(vid.id, callback, vid.title, vid.merge, format, ext, vid.clips, vid.duration);\r\n  //     } else {\r\n  //       let ext: string = vid.ext === '1' ? 'mp3' : 'm4a';\r\n  //       downloadAudio(vid.id, callback, vid.title, ext, vid.clips, vid.duration);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const search = () => {\r\n  //   changeSearch(!searchIsUp);\r\n  // };\r\n\r\n  return (\r\n    <Outer>\r\n      <QueueContainer>\r\n        {items.map((val, i) => (\r\n          <Item\r\n            Format={val.Format}\r\n            Info={val.Info}\r\n            Thumbnail={val.Thumbnail}\r\n            Title={val.Title}\r\n            key={i}\r\n          />\r\n        ))}\r\n      </QueueContainer>\r\n      <ButtonsContainer>\r\n        <button onClick={download} /*disabled={disable}*/>\r\n          Download Videos\r\n        </button>\r\n        <NavDiv>\r\n          <NavSpan>\r\n            <NavLabel>Filetype:</NavLabel>\r\n            <select defaultValue={ext} onChange={(e) => setExt(e.target.value)}>\r\n              <optgroup label=\"Video\">\r\n                <option value={-3}>mkv</option>\r\n                <option value={-2}>mp4</option>\r\n                <option value={-1} disabled={true}>\r\n                  webm\r\n                </option>\r\n              </optgroup>\r\n              <optgroup label=\"Audio\">\r\n                <option value={1} disabled={true}>\r\n                  mp3\r\n                </option>\r\n                <option value={2}>m4a</option>\r\n              </optgroup>\r\n            </select>\r\n          </NavSpan>\r\n        </NavDiv>\r\n        {/* <button onClick={() => setQueue([])} disabled={disable}> */}\r\n          {/* Clear queue */}\r\n        {/* </button> */}\r\n        {/* <button onClick={inputUrl}>Input url</button> */}\r\n        {/* <button onClick={search}>Search Youtube</button> */}\r\n        {/* <button onClick={() => addToQueue('PLKYU22RTU_BNQ-yXwT8rF94zBLGLy5iT-')}>Test</button> */}\r\n      </ButtonsContainer>\r\n    </Outer>\r\n  );\r\n};\r\n\r\nexport default Queue;\r\n","import styled from 'styled-components';\r\n\r\nexport const Outer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 90vw;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  min-height: 50px;\r\n  padding: 10px 5vw 0 5vw;\r\n`;\r\n\r\nexport const Inner = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 90vw;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin: 0.5vh 0.5vw;\r\n  flex: 1;\r\n  border: 2px solid var(--almost-black);\r\n  background-color: var(--black);\r\n  color: var(--white);\r\n  border-radius: 5px;\r\n  height: 1.5rem;\r\n`;\r\n\r\nexport const Submit = styled.button`\r\n  margin: 0.5vh 0.5vw;\r\n  height: 1.5rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Outer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  width: 90vw;\r\n  height: calc(100vh - (110px + 4vh));\r\n  padding: 2vh 5vw;\r\n  z-index: 10;\r\n\r\n  @media only screen and (max-width: 660px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const QueueContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  width: 58vw;\r\n  margin: 1vh 1vw 1vh 0;\r\n  border-radius: 5px;\r\n  border: 2px solid var(--almost-black);\r\n  overflow-y: scroll;\r\n\r\n  @media only screen and (max-width: 660px) {\r\n    margin: 1vh 1vw;\r\n    height: 100%;\r\n    width: 88vw;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n    background-color: var(--black);\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    background-color: #181a1b;\r\n    width: 8px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #555;\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  width: 28vw;\r\n  padding: 1vh 1vw 1vh 1vw;\r\n\r\n  @media only screen and (max-width: 660px) {\r\n    width: 88vw;\r\n    height: 14vh;\r\n  }\r\n\r\n  > button {\r\n    height: 8vh;\r\n\r\n    &:disabled {\r\n      background-color: var(--almost-black);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavDiv = styled.div`\r\n  padding: 1vh 0;\r\n`;\r\n\r\nexport const NavLabel = styled.label`\r\n  display: block;\r\n`;\r\n\r\nexport const NavSpan = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: max(28vw, 90px);\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const DropdownContent = styled.div`\r\n  display: block;\r\n  position: absolute;\r\n  background-color: var(--black);\r\n  min-width: 160px;\r\n  z-index: 2;\r\n  right: 0;\r\n  top: 35px;\r\n  border-radius: 10px;\r\n  border: var(--almost-black) solid 2px;\r\n  overflow: visible;\r\n  visibility: hidden;\r\n\r\n  > label {\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    display: block;\r\n  }\r\n\r\n  > label:hover {\r\n    background-color: var(--almost-black);\r\n  }\r\n`;\r\n\r\nexport const VideoOptions = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  width: 24px;\r\n  visibility: hidden;\r\n\r\n  &:hover ${DropdownContent} {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.span`\r\n  position: relative;\r\n`;\r\n\r\nexport const PlayItem = styled.div`\r\n  display: flex;\r\n  border-radius: 2px;\r\n  width: 100%;\r\n  height: 80px;\r\n  min-height: 50px;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid var(--almost-black);\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  background-color: ${(props) => {\r\n    // @ts-ignore: Object is possibly 'null'.\r\n    return props.show ? 'var(--almost-black)' : 'var(--black)';\r\n  }};\r\n\r\n  &:hover ${VideoOptions} {\r\n    visibility: visible;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--dark-grey);\r\n  }\r\n\r\n  &:active {\r\n    background-color: var(--regular-grey);\r\n  }\r\n`;\r\n\r\nexport const ImagePreview = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 115px;\r\n  height: 64px;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  line-height: 20px;\r\n  font-family: Roboto;\r\n  font-size: 16px;\r\n  color: var(--white);\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  &:focus {\r\n    text-overflow: initial;\r\n  }\r\n`;\r\n\r\nexport const Separator = styled.hr`\r\n  display: block;\r\n  height: 1px;\r\n  border: 0;\r\n  border-top: 1px solid var(--dark-grey);\r\n  margin: 0.05em 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Placeholder = styled.span`\r\n  height: 50px;\r\n  width: 24px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 27px;\r\n  margin: 2px;\r\n  line-height: 26px;\r\n\r\n  > label {\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    display: block;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\n\r\nconst KebabMenu: FC = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path\r\n        d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\r\n        fill=\"#e8e6e3\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default KebabMenu;\r\n","import React from 'react';\r\nimport { Outer, Input, Submit } from './style';\r\nimport {curQueue, item, setCurQueue} from '../Queue'\r\n\r\n\r\nconst Progress = () => {\r\n  let inputRef: HTMLInputElement;\r\n\r\n  const getInfo = () => {\r\n    // fetch(`http://localhost:8080/info`, {\r\n    fetch(`https://api.web-dl.live/info`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ url: inputRef.value })\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      const newQueue = [...curQueue]\r\n      const parsedData = res;\r\n      for(const item of parsedData){\r\n        const { info } = item;\r\n        let bestFormat = {quality: -1};\r\n\r\n        for(const format of info.formats) {\r\n          if(format.quality > bestFormat.quality){\r\n            bestFormat = format;\r\n          }\r\n        }\r\n\r\n        console.log(info)\r\n        const newItem: item = {\r\n          Info: info,\r\n          Thumbnail: info.thumbnail,\r\n          Title: info.title,\r\n          Format: bestFormat\r\n        };\r\n        newQueue.push(newItem)\r\n      }\r\n      setCurQueue(newQueue);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Outer>\r\n      <Input type='text' ref={ref => {if(ref) inputRef = ref}}/>\r\n      <Submit onClick={getInfo}>Add to queue</Submit>\r\n    </Outer>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 90vw;\r\n  height: 50px;\r\n  padding: 0 5vw 0 5vw;\r\n`;\r\n\r\nexport const ILabel = styled.label``;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { Container, ILabel } from './style';\r\n\r\nexport let updateInfo: React.Dispatch<React.SetStateAction<string>>;\r\nexport let curInfo: string;\r\n\r\nconst InfoLabel: FC = () => {\r\n  const [info, setInfo] = useState('Waiting for download');\r\n\r\n  useEffect(() => {\r\n    updateInfo = setInfo;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    curInfo = info;\r\n  }, [info]);\r\n\r\n  return (\r\n    <Container>\r\n      <ILabel>{info}</ILabel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InfoLabel;\r\n","import React from 'react';\r\nimport Progress from '../Input';\r\nimport Queue from '../Queue';\r\nimport InfoLabel from '../InfoLabel';\r\n// import Search from '../Search/index';\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Progress />\r\n      <Queue />\r\n      <InfoLabel />\r\n      {/* <Search /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    color: var(--white);\r\n    font-family: Roboto;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n    background-color: var(--black);\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    background-color: #181a1b;\r\n    width: 8px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #555;\r\n  }\r\n\r\n  button {\r\n    appearance: button;\r\n    text-rendering: auto;\r\n    color: var(--white);\r\n    letter-spacing: normal;\r\n    word-spacing: normal;\r\n    text-transform: none;\r\n    text-indent: 0px;\r\n    text-shadow: none;\r\n    display: inline-block;\r\n    text-align: center;\r\n    align-items: flex-start;\r\n    cursor: default;\r\n    background-color: var(--dark-grey);\r\n    box-sizing: border-box;\r\n    margin: 0em;\r\n    font: 400 13.3333px Roboto;\r\n    padding: 1px 6px;\r\n    border-radius: 2px;\r\n    margin: 2px;\r\n    border: none;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: var(--regular-grey);\r\n  }\r\n\r\n  button:active {\r\n    background-color: var(--light-grey);\r\n  }\r\n\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  select {\r\n    appearance: button;\r\n    text-rendering: auto;\r\n    color: var(--white);\r\n    letter-spacing: normal;\r\n    word-spacing: normal;\r\n    text-transform: none;\r\n    text-indent: 0px;\r\n    text-shadow: none;\r\n    display: inline-block;\r\n    text-align: center;\r\n    align-items: flex-start;\r\n    cursor: default;\r\n    background-color: var(--dark-grey);\r\n    box-sizing: border-box;\r\n    margin: 0em;\r\n    font: 400 13.3333px Roboto;\r\n    padding: 1px 6px;\r\n    border-radius: 2px;\r\n    margin: 2px;\r\n    border: none;\r\n  }\r\n\r\n  select:hover {\r\n    background-color: var(--regular-grey);\r\n  }\r\n\r\n  select:active {\r\n    background-color: var(--light-grey);\r\n  }\r\n\r\n  select:focus {\r\n    outline: none;\r\n    background-color: var(--dark-grey);\r\n  }\r\n\r\n\r\n  html {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n\r\n  body {\r\n    background-color: var(--black);\r\n    overflow: hidden;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n\r\n  :root {\r\n    --white: #e8e6e3;\r\n    --almost-white: #CED4DA;\r\n    --light-grey: #ADB5BD;\r\n    --regular-grey: #6C757D;\r\n    --dark-grey: #495057;\r\n    --almost-black: #343A40;\r\n    --black: #212529;\r\n    --blue: #48cae4;\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport Layout from './components/Layout'\r\nimport GlobalStyles from './styles/global';\r\nimport {curQueue, setCurQueue, item} from './components/Queue';\r\n\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const url = new URL(window.location.href).searchParams.get('text');\r\n    if(url) {\r\n      // fetch(`http://localhost:8080/info`, {\r\n      fetch(`https://api.web-dl.live/info`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ url })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const newQueue = [...curQueue]\r\n        const parsedData = res;\r\n        for(const item of parsedData){\r\n          const { info } = item;\r\n          let bestFormat = {quality: -1};\r\n\r\n          for(const format of info.formats) {\r\n            if(format.quality > bestFormat.quality){\r\n              bestFormat = format;\r\n            }\r\n          }\r\n\r\n          console.log(info)\r\n          const newItem: item = {\r\n            Info: info,\r\n            Thumbnail: info.thumbnail,\r\n            Title: info.title,\r\n            Format: bestFormat\r\n          };\r\n          newQueue.push(newItem)\r\n        }\r\n        setCurQueue(newQueue);\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Layout />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}